<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>roundtripper on Posts</title>
    <link>https://www.jacoelho.com/categories/roundtripper/</link>
    <description>Recent content in roundtripper on Posts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 08 Jun 2021 10:00:00 +0000</lastBuildDate><atom:link href="https://www.jacoelho.com/categories/roundtripper/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go - On logging and dependencies</title>
      <link>https://www.jacoelho.com/blog/2021/06/go-on-logging-and-dependencies/</link>
      <pubDate>Tue, 08 Jun 2021 10:00:00 +0000</pubDate>
      
      <guid>https://www.jacoelho.com/blog/2021/06/go-on-logging-and-dependencies/</guid>
      <description>Doing code reviews, I have sometimes noticed libraries forcing dependencies on the users.
While it is perfectly acceptable if well justified and documented, it sometimes feels like adding unnecessary baggage.
A typical example would be something like the following snippet:
func (c *Client) HealthCheck(ctx context.Context) error { logrus.Debug(&amp;#34;sending get request&amp;#34;) req, err := http.NewRequestWithContext(ctx, http.MethodGet, c.url, nil) if err != nil { return err } resp, err := c.client.Do(req) if err !</description>
    </item>
    
  </channel>
</rss>
