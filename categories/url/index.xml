<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>url on Posts</title>
    <link>https://www.jacoelho.com/categories/url/</link>
    <description>Recent content in url on Posts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 17 Apr 2021 10:00:00 +0000</lastBuildDate><atom:link href="https://www.jacoelho.com/categories/url/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go - On building URL strings</title>
      <link>https://www.jacoelho.com/blog/2021/04/go-on-building-url-strings/</link>
      <pubDate>Sat, 17 Apr 2021 10:00:00 +0000</pubDate>
      
      <guid>https://www.jacoelho.com/blog/2021/04/go-on-building-url-strings/</guid>
      <description>Building URL strings in Go may be accomplished in a couple different ways:
url.Parse string concatenation (using +) fmt.Sprintf bytes.Buffer strings.Builder You may be asking yourself: which one should I use, then? As always, the answer depends. Let us explore why.
URL.Parse Before we start, a quick refresh on the URL structure:
One important fact to be aware is that when building URLs manually, it is easy to forget the percentage-encoding.</description>
    </item>
    
  </channel>
</rss>
